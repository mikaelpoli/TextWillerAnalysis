"tw_function","dependency","dep_function"
"classificaUtenti","base","as.character"
"classificaUtenti","base","Encoding"
"classificaUtenti","base","grep"
"classificaUtenti","base","grepl"
"classificaUtenti","base","gsub"
"classificaUtenti","base","iconv"
"classificaUtenti","base","ifelse"
"classificaUtenti","base","is.factor"
"classificaUtenti","base","is.na"
"classificaUtenti","base","is.null"
"classificaUtenti","base","length"
"classificaUtenti","base","match"
"classificaUtenti","base","max"
"classificaUtenti","base","names"
"classificaUtenti","base","nchar"
"classificaUtenti","base","order"
"classificaUtenti","base","paste0"
"classificaUtenti","base","return"
"classificaUtenti","base","row.names"
"classificaUtenti","base","rownames"
"classificaUtenti","base","sapply"
"classificaUtenti","base","strsplit"
"classificaUtenti","base","substr"
"classificaUtenti","base","sum"
"classificaUtenti","base","table"
"classificaUtenti","base","tolower"
"classificaUtenti","base","unlist"
"classificaUtenti","base","which"
"classificaUtenti","base","which.max"
"classificaUtenti","utils","data"
"normalizzacaratteri","base","gsub"
"normalizzaemote","base","gsub"
"normalizzaEmoticons","base","encodeString"
"normalizzaEmoticons","base","gsub"
"normalizzaEmoticons","base","nrow"
"normalizzaEmoticons","utils","data"
"normalizzahtml","base","gsub"
"normalizzapunteggiatura","base","gsub"
"normalizzapunteggiatura","base","paste"
"normalizzaslang","base","gsub"
"normalizzaTesti","base","attr"
"normalizzaTesti","base","c"
"normalizzaTesti","base","gsub"
"normalizzaTesti","base","is.character"
"normalizzaTesti","base","is.null"
"normalizzaTesti","base","paste"
"normalizzaTesti","base","Sys.setlocale"
"normalizzaTesti","TextWiller","normalizzacaratteri"
"normalizzaTesti","TextWiller","normalizzaemote"
"normalizzaTesti","TextWiller","normalizzaEmoticons"
"normalizzaTesti","TextWiller","normalizzahtml"
"normalizzaTesti","TextWiller","normalizzapunteggiatura"
"normalizzaTesti","TextWiller","normalizzaslang"
"normalizzaTesti","TextWiller","preprocessingEncoding"
"normalizzaTesti","TextWiller","removeStopwords"
"normalizzaTesti","TextWiller","tryTolower"
"normalizzaTesti","utils","data"
"patternExtract","base","data.frame"
"patternExtract","base","is.null"
"patternExtract","base","lapply"
"patternExtract","base","length"
"patternExtract","base","names"
"patternExtract","base","rbind"
"patternExtract","base","return"
"patternExtract","base","rownames"
"patternExtract","base","sapply"
"patternExtract","base","t"
"patternExtract","base","unlist"
"patternExtract","stringr","str_extract_all"
"preprocessingEncoding","base","Encoding"
"preprocessingEncoding","base","iconv"
"preprocessingEncoding","base","is.logical"
"preprocessingEncoding","base","mean"
"preprocessingEncoding","base","nchar"
"preprocessingEncoding","base","paste"
"preprocessingEncoding","base","round"
"preprocessingEncoding","base","sapply"
"preprocessingEncoding","base","sum"
"preprocessingEncoding","base","try"
"preprocessingEncoding","base","unique"
"preprocessingEncoding","base","warning"
"preprocessingEncoding","methods","is"
"removeStopwords","base","ifelse"
"removeStopwords","base","lapply"
"removeStopwords","base","nchar"
"removeStopwords","base","paste"
"removeStopwords","base","strsplit"
"removeStopwords","base","unlist"
"RTHound","base","as.matrix"
"RTHound","base","c"
"RTHound","base","cat"
"RTHound","base","factor"
"RTHound","base","floor"
"RTHound","base","gsub"
"RTHound","base","iconv"
"RTHound","base","is.na"
"RTHound","base","is.null"
"RTHound","base","length"
"RTHound","base","names"
"RTHound","base","paste"
"RTHound","base","rep"
"RTHound","base","return"
"RTHound","base","sapply"
"RTHound","base","sort"
"RTHound","base","strsplit"
"RTHound","base","t"
"RTHound","base","table"
"RTHound","base","unique"
"RTHound","base","unlist"
"RTHound","base","which"
"RTHound","stats","as.dist"
"RTHound","stats","cutree"
"RTHound","stats","dist"
"RTHound","stats","hclust"
"RTHound","utils","adist"
"sentiment","base","is.function"
"sentiment","base","is.null"
"sentiment","base","return"
"sentiment","base","sign"
"sentiment","TextWiller","normalizzaTesti"
"sentiment","utils","data"
"sentiment_utils","tibble","tibble"
"sentiment_utils","tidytext","unnest_tokens"
"sentiment_utils","base","apply"
"sentiment_utils","base","as.array"
"sentiment_utils","base","as.vector"
"sentiment_utils","base","c"
"sentiment_utils","base","cbind"
"sentiment_utils","base","gsub"
"sentiment_utils","base","is.na"
"sentiment_utils","base","length"
"sentiment_utils","base","match"
"sentiment_utils","base","nrow"
"sentiment_utils","base","paste"
"sentiment_utils","base","rep"
"sentiment_utils","base","return"
"sentiment_utils","base","sapply"
"sentiment_utils","base","strsplit"
"sentiment_utils","base","sum"
"sentiment_utils","base","unique"
"sentiment_utils","base","unlist"
"sentiment_utils","dplyr","group_by"
"sentiment_utils","dplyr","left_join"
"sentiment_utils","dplyr","summarise"
"sentiment_utils","SnowballC","wordStem"
"sentiment_utils","stringr","str_split"
"shorturl2url","base","gsub"
"shorturl2url","base","is.null"
"shorturl2url","base","length"
"shorturl2url","base","names"
"shorturl2url","base","nrow"
"shorturl2url","TextWiller","urlExtract"
"TimeStamp","base","as.POSIXct"
"TimeStamp","base","c"
"TimeStamp","base","is.integer"
"TimeStamp","base","is.null"
"TimeStamp","base","nrow"
"TimeStamp","base","order"
"TimeStamp","base","range"
"TimeStamp","base","rownames"
"TimeStamp","TextWiller","selezionaIntervalloTimeStamp"
"tryTolower","base","inherits"
"tryTolower","base","tolower"
"tryTolower","base","tryCatch"
"urlExtract","base","as.character"
"urlExtract","base","cbind"
"urlExtract","base","data.frame"
"urlExtract","base","grep"
"urlExtract","base","is.null"
"urlExtract","base","lapply"
"urlExtract","base","length"
"urlExtract","base","names"
"urlExtract","base","nchar"
"urlExtract","base","rep"
"urlExtract","base","return"
"urlExtract","base","sapply"
"urlExtract","base","substr"
"urlExtract","base","unique"
"urlExtract","base","unlist"
"urlExtract","base","which"
"urlExtract","stringr","str_extract_all"
"utili","base","c"
"utili","base","colnames"
"utili","base","gsub"
"utili","base","paste"
"utili","base","sapply"
"utili","stringr","str_count"
